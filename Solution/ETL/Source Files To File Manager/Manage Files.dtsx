<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/7/2018 5:35:46 PM"
  DTS:CreationName=""
  DTS:CreatorComputerName="SFDATASQL"
  DTS:CreatorName="SFDATASQL\jeff.faseun"
  DTS:DTSID="{37D43593-7B34-4707-8E3F-A14FFBAF9214}"
  DTS:ExecutableType=""
  DTS:LastModifiedProductVersion="14.0.3002.68"
  DTS:LocaleID="1033"
  DTS:ObjectName="FileLoad_File_Manager"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="366"
  DTS:VersionGUID="{8DAF4694-C249-4ADA-8933-8FCE0655EB13}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1ABA835B-0FB6-4B90-923E-F90053855CD8}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::accepted_root_folder] + &quot;\\&quot; +  @[User::folder_branch]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="accepted_branch_folder_path">
      <DTS:VariableValue
        DTS:DataType="8">\Root</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3FE9ACA6-4CB5-407B-8A6D-178351C45FC4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="accepted_root_folder">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A7EF2DA1-975C-4811-8FC1-ECF92991D79C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="AgencyTable">
      <DTS:VariableValue
        DTS:DataType="8">agency</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{21D1D794-9340-4FFC-9DB1-23D12F45BFEF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="agency_name">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{630E5122-90B0-4EA5-96B2-A88B9A13A493}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="archive_file_name">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DA8DE5C6-D6CD-4A7B-B656-179EF8FB2FE5}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="batch_key">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2E23BBE5-70C4-4B14-B97C-8574DA70B7B7}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="completed_ind">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{14128B59-D44F-4269-BF9B-7A2D6B249B41}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;DECLARE @folder_branch VARCHAR(50) = '&quot; +  @[User::folder_branch] + &quot;', @default_file_format_code VARCHAR(50), @agency_name VARCHAR(50)&#xA;&#xA;SELECT @default_file_format_code = [default_file_format_code], @agency_name = [agency_name] FROM [dbo].[agency] WHERE [folder_branch_name] = @folder_branch &#xA;SELECT ISNULL(@default_file_format_code, 'DO NOT PROCESS') AS default_file_format_code, COALESCE(@agency_name,'DO NOT PROCESS') agency_name&#xA;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="defaultFileFormatQuery">
      <DTS:VariableValue
        DTS:DataType="8">DECLARE @folder_branch VARCHAR(50) = 'Root', @default_file_format_code VARCHAR(50), @agency_name VARCHAR(50)

SELECT @default_file_format_code = [default_file_format_code], @agency_name = [agency_name] FROM [dbo].[agency] WHERE [folder_branch_name] = @folder_branch 
SELECT ISNULL(@default_file_format_code, 'DO NOT PROCESS') AS default_file_format_code, COALESCE(@agency_name,'DO NOT PROCESS') agency_name
</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8B1B1987-A5CF-47AB-A3CC-C7358B3F60BE}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="default_file_format_code">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{429304D2-BAA5-4CC0-B9F7-1B738FB6F2D9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="error_message">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{626B8634-6211-4341-A5C6-E70059EE5A93}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileTable">
      <DTS:VariableValue
        DTS:DataType="8">agency_file</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2DDCA2EB-72BA-4173-B10E-BC72575F0B3E}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;INSERT INTO dbo.agency_file ([file_name], default_file_format_code, folder_path, folder_branch_name, file_hash, worksheet_name, agency_name, file_created_dtm, file_modified_dtm, create_timestamp, modify_timestamp, notification_sent_ind, batch_key)&#xA;OUTPUT inserted.agency_file_key&#xA;SELECT &#xA;?  AS [file_name]&#xA;, ? AS default_file_format_code&#xA;, ? AS folder_path&#xA;, ? AS folder_branch_name&#xA;, ? AS file_hash&#xA;, ? AS worksheet_name&#xA;, ? AS agency_name&#xA;, ? AS file_created_dtm&#xA;, ? AS file_modified_dtm&#xA;, CURRENT_TIMESTAMP AS create_timestamp&#xA;, CURRENT_TIMESTAMP AS modify_timestamp&#xA;, 0 AS notification_sent_ind&#xA;, ? AS batch_key&#xA;WHERE ? != 'DO NOT PROCESS'&#xA;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileTableInsertQuery">
      <DTS:VariableValue
        DTS:DataType="8">INSERT INTO dbo.agency_file ([file_name], default_file_format_code, folder_path, folder_branch_name, file_hash, worksheet_name, agency_name, file_created_dtm, file_modified_dtm, create_timestamp, modify_timestamp, notification_sent_ind, batch_key)
OUTPUT inserted.agency_file_key
SELECT 
?  AS [file_name]
, ? AS default_file_format_code
, ? AS folder_path
, ? AS folder_branch_name
, ? AS file_hash
, ? AS worksheet_name
, ? AS agency_name
, ? AS file_created_dtm
, ? AS file_modified_dtm
, CURRENT_TIMESTAMP AS create_timestamp
, CURRENT_TIMESTAMP AS modify_timestamp
, 0 AS notification_sent_ind
, ? AS batch_key
WHERE ? != 'DO NOT PROCESS'
</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FED0C3CA-8948-481F-BFB7-6D122857D708}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileTableKey">
      <DTS:VariableValue
        DTS:DataType="8">agency_file_key</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CC3D42F1-DA6B-4321-8598-32F309C2A157}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="file_created_dtm">
      <DTS:VariableValue
        DTS:DataType="7">3/7/2018 7:41:51 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D14DBA55-F1E1-48C3-813B-9C717FBDE8EE}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="file_error_count">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{24675752-FE21-4E15-9E0E-47E20B119DBD}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="file_extension">
      <DTS:VariableValue
        DTS:DataType="8">*.xls*</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{084B66D8-276A-4A5E-8D76-157F6F943F7C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="file_guid">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6FD30F53-6B2C-4DCF-8E19-75074EEF1298}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="file_hash">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{87B90A64-4588-47F4-9DFC-EE51C8B0AA9A}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="file_key">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D13AE343-9FFE-457E-BD26-8D9337623DFE}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="file_modified_dtm">
      <DTS:VariableValue
        DTS:DataType="7">3/7/2018 6:01:32 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{73BE5AA3-60F6-4822-A087-3FB360C16ED0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="file_name">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2B8C730B-4F48-4C90-9EFD-930A4CAB0C22}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="file_path">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{81F4118E-FEB4-480F-838C-9FA3317DDC35}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="file_status">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5316D046-5CF8-49FB-A311-2E5D5FF43FC8}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT received_folder_path,accepted_folder_path, rejected_folder_path FROM [dbo].[config] WHERE config_key = 0&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FolderQuery">
      <DTS:VariableValue
        DTS:DataType="8">SELECT received_folder_path,accepted_folder_path, rejected_folder_path FROM [dbo].[config] WHERE config_key = 0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5A6687FE-2748-4255-ADC2-1E7AA9F1AAD6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="folder_branch">
      <DTS:VariableValue
        DTS:DataType="8">Root</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1C1F50BF-A60E-4540-B7FD-A42BD73C42FA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="folder_path">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B51E7295-56E8-4FB8-B63B-D36FF7A82841}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="inserted_record_count">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4C68856E-27D8-4E92-855C-7A38CA57D19A}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="package_error_flag">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4FD6C4F4-1EAE-42CD-A460-E8E3329E93FC}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="(DT_STR, 8, 1252) @[System::VersionMajor] + &quot;.&quot; + (DT_STR, 8, 1252) @[System::VersionMinor] + &quot;.&quot; + (DT_STR, 8, 1252) @[System::VersionBuild]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="package_version">
      <DTS:VariableValue
        DTS:DataType="8">1.0.366</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{39E50C4A-A81E-4ED0-AF27-F00BDAD71AF2}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="processed_ind">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BB86844F-967E-4D46-9D8D-74FAE941CA96}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::ProjectName]  + &quot;::&quot; +   @[System::PackageName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="process_uid">
      <DTS:VariableValue
        DTS:DataType="8">Source Files To File Manager::FileLoad_File_Manager</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{52155E80-02EF-4F1F-A0F5-2A7B581CEC48}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::received_root_folder] + &quot;\\&quot; +  @[User::folder_branch]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="received_branch_folder_path">
      <DTS:VariableValue
        DTS:DataType="8">\Root</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1650D0A9-C49C-4990-A910-5C6F2726F879}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="received_root_folder">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BBF8FA7A-2DD9-469B-9B7F-3AB9F6A5A8AA}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="record_count">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0948D1CA-F0F1-4946-986E-9302FF6112A9}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::rejected_root_folder] + &quot;\\&quot; +  @[User::folder_branch]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="rejected_branch_folder_path">
      <DTS:VariableValue
        DTS:DataType="8">\Root</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7066A875-348B-497C-AFFA-2ED38F2C218B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="rejected_root_folder">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B11FF50B-D7F4-43F0-85D0-A5B0AF130BC8}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="source_record_count">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0FE74DD3-7BC0-44EC-B91B-053FC4F673B4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TargetTable">
      <DTS:VariableValue
        DTS:DataType="8">agency_file_row</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3FF67D27-BB83-4ACB-A661-C9AA0DAF7D06}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TargetTableKey">
      <DTS:VariableValue
        DTS:DataType="8">agency_file_row_key</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A4739E59-4088-4820-A285-BD5B89357167}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;UPDATE [dbo].&quot; + @[User::TargetTable] &#xA;+&quot;\nSET  [agency_file_key] = ?&#xA;      , [batch_key] = ?&#xA;WHERE [agency_file_key] IS NULL&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TargetUpdateQuery">
      <DTS:VariableValue
        DTS:DataType="8">UPDATE [dbo].agency_file_row
SET  [agency_file_key] = ?
      , [batch_key] = ?
WHERE [agency_file_key] IS NULL</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BBF24651-A581-4027-9700-69F624FCBAD3}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="unprocessed_record_count">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EF172E52-A711-436D-B6D3-2011DAE0E1C7}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Variable">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AC4A0536-A181-4325-B14C-CB7B583D20EC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="worksheet_name">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Recurse Through Received Folders"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{3129F4EA-77E0-4796-B576-8FCD603CBA89}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Recurse Through Received Folders">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{15DC96E0-4460-4A8B-A89D-C6CE9A013D2D}"
        DTS:ObjectName="{15DC96E0-4460-4A8B-A89D-C6CE9A013D2D}">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="F:\Received\Trinity" />
            <FEFEProperty
              FileSpec="*.xls*" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="-1" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Recurse Through Received Folders\Confirm Target Branches Exist"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{70c9eee2-240c-4d1b-bcc9-5dcd2dcc4c05}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Confirm Target Branches Exist"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_cb61f5ce6b574ccd8bfa724651409e21"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="VisualBasic" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Recurse Through Received Folders\Email Notification"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{9b350a80-789f-4d89-8b98-b725a3ecd1a5}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Email Notification"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BCCC69F7-9246-4FF6-8C73-70803CE6E178}"
              SQLTask:SqlStatementSource="EXEC [dbo].[file_status_send_email_notification] ?&#xA;&#xA;--EXEC [dbo].[get_fileManager_status]  ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::file_key"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Recurse Through Received Folders\Insert File"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{be90173a-60a1-40a4-b79a-2d7cb0c1cf56}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert File"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BCCC69F7-9246-4FF6-8C73-70803CE6E178}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::FileTableInsertQuery" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::file_name"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="200" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::folder_branch"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="200" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::file_hash"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="32" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="7"
                SQLTask:DtsVariableName="User::file_created_dtm"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="8"
                SQLTask:DtsVariableName="User::file_modified_dtm"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::file_path"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="1000" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="User::worksheet_name"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="50" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="9"
                SQLTask:DtsVariableName="User::batch_key"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::default_file_format_code"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="20" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="6"
                SQLTask:DtsVariableName="User::agency_name"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="10"
                SQLTask:DtsVariableName="User::default_file_format_code"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="20" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Recurse Through Received Folders\Load File Row Data"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:DelayValidation="True"
          DTS:Description="Script Task"
          DTS:Disabled="True"
          DTS:DTSID="{33775ea4-0f67-4f78-9ee4-83e34dc4851d}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Load File Row Data"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_d2414d6c551442e39a779a1cc7b227c7"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Recurse Through Received Folders\Move File To Accepted"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{c49bc496-d306-4b67-a6d5-c1fe6bc9bedf}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Move File To Accepted"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_38091818328f417bba11e225e956a954"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="VisualBasic" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Recurse Through Received Folders\Move File To Rejected"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:Disabled="True"
          DTS:DTSID="{a533e036-7125-4519-b412-5a09ce4be031}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Move File To Rejected"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_e5686b59c35a4708970327bd671ed082"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="VisualBasic" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Recurse Through Received Folders\Script Task"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{AAC1BAE2-39F5-4DE4-BAD5-B817614288F5}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_29ffb30d5c364beb8b5474f7bae2e559"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp">
              <ProjectItem
                Name="ST_29ffb30d5c364beb8b5474f7bae2e559.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{9D22CA71-35B3-49C2-BFF9-4191BCC691C2}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_29ffb30d5c364beb8b5474f7bae2e559</RootNamespace>
    <AssemblyName>ST_29ffb30d5c364beb8b5474f7bae2e559</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="ColumnValue.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ColumnValue.cs"
                Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ST_29ffb30d5c364beb8b5474f7bae2e559
{
  
    public class ColumnValue
    {
        public string sourceColumnName = string.Empty;
        public string destinationColumnName = string.Empty;
        public string value = string.Empty;
        public int columnIndex = 00;




    }
    
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_29ffb30d5c364beb8b5474f7bae2e559.Properties.Settings.get_Default():ST_29ffb30d5c364beb8b5474f7bae2e559.Properties.Sett" +
    "ings")]

namespace ST_29ffb30d5c364beb8b5474f7bae2e559.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Data.OleDb;
using System.Data.SqlClient;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Security.Cryptography;
#endregion

namespace ST_29ffb30d5c364beb8b5474f7bae2e559
{
    
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        private string _FileGuid = null;
        public String FilePath;
        public string strFileKey;

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
		{
            // TODO: Add your code here
            string FilePath = Dts.Variables["User::file_path"].Value.ToString();
            string ReceivedFolderPath = Dts.Variables["User::received_root_folder"].Value.ToString();
            string FileHash = Dts.Variables["User::file_hash"].Value.ToString();
            //string FileKey = Dts.Variables["User::file_key"].Value.ToString();
            string BatchKey = Dts.Variables["User::batch_key"].Value.ToString();

            this.FilePath = FilePath;
            string FileName = getFileName(FilePath);

            // Table Variables
            string TableName = Dts.Variables["User::TargetTable"].Value.ToString();
            string FileTable = Dts.Variables["User::FileTable"].Value.ToString();
            string FileTableKey = Dts.Variables["User::FileTableKey"].Value.ToString();

            Dts.Variables["User::file_name"].Value = FileName;

            //CHECK IS FILE ROWS EXIST IN TARGET TABLE
            if (isFileExist(FileHash, TableName, FileTable, FileTableKey) == false)
            {
                //MessageBox.Show("File does not Exist in agency_file_row.");

                using (SqlConnection myADONETConnection = (SqlConnection)(Dts.Connections["ADO.corridor_file_manager"].AcquireConnection(Dts.Transaction) as SqlConnection))
                {

                    var dtDestination = new DataTable();
                    using (var da = new SqlDataAdapter("SELECT * FROM dbo.agency_file_row", myADONETConnection))
                    {
                        da.Fill(dtDestination);
                    }



                    string strSQLFileKey = "SELECT agency_file_key FROM(SELECT agency_file_key, ROW_NUMBER() OVER(PARTITION BY file_hash ORDER BY agency_file_key) rnum FROM[dbo].[agency_file] WHERE file_hash = @fileHash AND notification_sent_ind = 1) A WHERE rnum = 1";
                    SqlCommand cmdFileKey = new SqlCommand(strSQLFileKey, myADONETConnection);
                    cmdFileKey.Parameters.AddWithValue("@fileHash", FileHash);
                    strFileKey = (string)cmdFileKey.ExecuteScalar();


                    string strFolderBranch = FolderBranch(ReceivedFolderPath);
                    Dts.Variables["User::folder_branch"].Value = (strFolderBranch == null) ? String.Empty : strFolderBranch;

                    string HDR = "YES";

                    //Create Excel Connection String
                    string ConStr = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + FilePath + ";Extended Properties=\"Excel 12.0;HDR=" + HDR + "\"";
                    OleDbConnection excelConnection = new OleDbConnection(ConStr);

                    //MessageBox.Show("Excel Connection: " + ConStr);

                    //Get Sheet 
                    excelConnection.Open();
                    DataTable dtSheet = excelConnection.GetOleDbSchemaTable(OleDbSchemaGuid.Tables, null); ;
                    string tablename = dtSheet.TableName;

                    //Only read data from provided SheetNumber
                    //foreach (DataRow drSheet in dtSheet.Rows)
                    //{
                    //    //CHANGE COLUMN NAMES AND/OR ORDER

                    //    if (!drSheet["TABLE_NAME"].ToString().Contains("FilterDatabase"))
                    //    {
                    //        string worksheetname = drSheet["TABLE_NAME"].ToString();

                    //        //Excel Query 
                    //        string excelQuery = string.Format("select * from [" + worksheetname + "]"); //
                    //                                                                                    //MessageBox.Show("Query: " + excelQuery);

                    //        OleDbCommand excelCom = new OleDbCommand(excelQuery, excelConnection);
                    //        OleDbDataAdapter adp = new OleDbDataAdapter(excelCom);
                    //        DataTable Exceldt = new DataTable();

                    //        //Exceldt.Columns[0].ColumnName; 

                    //        Exceldt.TableName = worksheetname;
                    //        adp.Fill(Exceldt);

                    //        Dts.Variables["User::worksheet_name"].Value = worksheetname;
                    //        Dts.Variables["User::processed_ind"].Value = 0;
                    //        //Dts.Variables["User::record_count"].Value = RC;

                    //        ////If Worksheets start with Numbers, when we read it add extra '(single quote), this will take care of that part
                    //        worksheetname = worksheetname.Replace("'", "");
                    //        //MessageBox.Show("Excel File Name:" + FileName
                    //        //     + "\n File Hash: " + FileHash
                    //        //     + "\n File Path: " + FilePath
                    //        //     + "\n Worksheet Name: " + worksheetname
                    //        //     + "\n Agency: " + worksheetname
                    //        //     );

                    //        string strAgency = drSheet.ToString();

                    //        //using (SqlBulkCopy excelBC = new SqlBulkCopy(myADONETConnection))
                    //        //{
                    //        //Destination table to load
                    //        //excelBC.DestinationTableName = dbo." + TableName;
                    //        int insertStatement = 0;

                    //        for (int row = 0; row < Exceldt.Rows.Count; row++)
                    //        {
                    //            //
                    //            var columnNames = new List<string>();
                    //            Dictionary<string, string> columnValue = new Dictionary<string, string>();

                    //            //Create Column Value list
                    //            var columnValues = new List<ColumnValue>();


                    //            for (int col = 0; col < Exceldt.Columns.Count; col++)
                    //            {
                    //                ColumnValue cValue = new ColumnValue();
                    //                cValue.sourceColumnName = Exceldt.Columns[col].ColumnName;//string.Format("column{0}_label", col.ToString("00"));
                    //                cValue.destinationColumnName = string.Format("column{0}_label", col.ToString("00"));
                    //                cValue.value = Exceldt.Columns[col].ColumnName;
                    //                columnValues.Add(cValue);

                    //                cValue = new ColumnValue();
                    //                cValue.sourceColumnName = string.Format("column{0}_value", col.ToString("00"));
                    //                cValue.destinationColumnName = string.Format("column{0}_value", col.ToString("00"));
                    //                cValue.value = Exceldt.Rows[row][col].ToString();//.ItemArray[col].ToString();
                    //                columnValues.Add(cValue);


                    //            }

                    //            string SqlCmd = string.Empty;
                    //            string sqlColumnName = string.Empty;
                    //            string sqlColumnValue = string.Empty;



                    //            //foreach(KeyValuePair<string,string> columnItem in columnValue)
                    //            foreach (ColumnValue cValue in columnValues)
                    //            {
                    //                sqlColumnName += string.Format(", {0}", cValue.destinationColumnName);
                    //                sqlColumnValue += string.Format(", '{0}'", (cValue.value.Contains("'") ? cValue.value.Replace("'", "''") : cValue.value));
                    //            }

                    //            //string createDate = string.Format("'{0:d}'", DateTime.Now.ToString("yyyy-MM-ddThh:mm:sszzz"));
                    //            string createDate = string.Format("'{0:d}'", DateTime.Now);
                    //            string modifyDate = string.Format("'{0:d}'", DateTime.Now);


                    //            try
                    //            {
                    //                if (columnValues.Count > 1)
                    //                {

                    //                    if (columnValues[1].value != string.Empty)
                    //                    {
                    //                        SqlCmd = string.Format("INSERT INTO dbo.agency_file_row ({0}, agency_file_key, create_timestamp, modify_timestamp, batch_key ) VALUES ({1}, {2}, {3}, {4}, {5})", sqlColumnName.Substring(2, sqlColumnName.Length - 2), sqlColumnValue.Substring(2, sqlColumnValue.Length - 2), strFileKey, createDate, modifyDate, BatchKey);
                    //                        //SqlCmd = string.Format("INSERT INTO dbo.agency_file_row (agency_file_row_key, {0}, create_timestamp, modify_timestamp, batch_key) VALUES ({1}, {2}, {3}, {4}, {5})", insertStatement + 1, sqlColumnName.Substring(2, sqlColumnName.Length - 2), sqlColumnValue.Substring(2, sqlColumnValue.Length - 2), createDate, modifyDate, BatchKey);
                    //                        //SqlCmd = string.Format("INSERT INTO dbo.agency_file_row (agency_file_row_key, {0}, create_timestamp, modify_timestamp, batch_key) VALUES ({1}, {2}, {3}, {4})", sqlColumnName.Substring(2, sqlColumnName.Length - 2), insertStatement+1, sqlColumnValue.Substring(2, sqlColumnValue.Length - 2), DateTime.Now.ToString("yyyy-MM-ddThh:mm:sszzz"), DateTime.Now.ToString("yyyy-MM-ddThh:mm:sszzz"), BatchKey);
                    //                        //SqlCmd = string.Format("INSERT INTO dbo.agency_file_row (agency_file_row_key, agency_file_key, {0}, create_timestamp, modify_timestamp, batch_key) VALUES ({1}, {2}, {3}, {4}, {5}, {6})", insertStatement + 1, FileKey, sqlColumnName.Substring(2, sqlColumnName.Length - 2),  sqlColumnValue.Substring(2, sqlColumnValue.Length - 2), createDate, modifyDate, BatchKey);

                    //                        using (SqlCommand cmd = new SqlCommand(SqlCmd, myADONETConnection))
                    //                        {
                    //                            cmd.CommandType = CommandType.Text;

                    //                            cmd.ExecuteNonQuery();
                    //                            insertStatement++;
                    //                        }
                    //                    }

                    //                }

                    //            }
                    //            catch (Exception e)
                    //            {
                    //                e.ToString();
                    //            }


                    //        }

                    //        //MessageBox.Show("agency_file_key: " + FileKey + "\ncreate_timestamp: " + DateTime.Now.ToString("yyyy-MM-ddThh:mm:sszzz"));
                    //        //excelBC.ColumnMappings.Add(int.FileKey, "agency_file_key");
                    //        //excelBC.ColumnMappings.Add(DateTime.Now.ToString("yyyy-MM-ddThh:mm:sszzz"), "create_timestamp");
                    //        //excelBC.ColumnMappings.Add(DateTime.Now.ToString("yyyy-MM-ddThh:mm:sszzz"), "modify_timestamp");
                    //        ////Mapping Table column    
                    //        //excelBC.ColumnMappings.Add("Agency", "Agency");
                    //        //excelBC.ColumnMappings.Add("Branch", "Branch");    
                    //        //excelBC.WriteToServer(Exceldt);

                    //        Dts.Variables["User::inserted_record_count"].Value = insertStatement;
                    //        //MessageBox.Show(string.Format("total number of inserts;{0} ", insertStatement) );
                    //        //}

                    //    }
                    //}


                    excelConnection.Close();
                    dtSheet.Dispose();
                    System.Threading.Thread.Sleep(10000);

                }

            }
            else
            {
                //MessageBox.Show("File Exist in agency_file_row.");
            }

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        /// <summary>File name component of the file specified in the FilePath.</summary>
        /// <returns>Returns the file name with a path.</returns>
        public string getFileName(string FilePath)
        {
            return System.IO.Path.GetFileName(FilePath);
        }

        /// <summary> File name component of the file specified in the FilePath. </summary>
        /// <returns>Returns the file name with a path.</returns>
        public string getFileGuid(string FilePath)
        {
            return this._FileGuid = Guid.NewGuid().ToString().Replace("-", String.Empty).ToString();
        }

        /// <summary> File name component of the file specified in the FilePath. </summary>
        /// <returns>Returns the file name with a path.</returns>
        public string getFileHash(string FilePath)
        {
            FileStream fs = System.IO.File.OpenRead(FilePath);

            MD5 md5hasher = MD5.Create();
            byte[] hash = md5hasher.ComputeHash(fs);

            md5hasher.Clear();
            fs.Close();

            return BitConverter.ToString(hash).Replace("-", String.Empty);
        }

        /// <summary> File extension of the file specified in the FilePath. </summary>
        /// <returns></returns>
        public string FileExtension
        {
            get
            {
                return System.IO.Path.GetExtension(this.FilePath);
            }
        }

        /// <summary> File name of the file specified in the FilePath excluding the file extension suffix. </summary>
        /// <returns></returns>
        public string FileNameWithoutExtension
        {
            get
            {
                return System.IO.Path.GetFileNameWithoutExtension(this.FilePath);
            }
        }

        /// <summary> Unique file name comprised the original file name and the file hash. </summary>
        /// <returns></returns>
        public string ArchiveFileName
        {
            get
            {
                return String.Concat(
                    new string[] { this.FileNameWithoutExtension, "_", this._FileGuid, this.FileExtension });
            }
        }

        /// <summary> Directory component of the file specified in the FilePath. </summary>
        /// <returns></returns>
        public string DirectoryPath(string FilePath)
        {
            return System.IO.Path.GetDirectoryName(FilePath);
        }

        /// <summary> Date and time at which the file was created. </summary>
        /// <returns></returns>
        public DateTime getCreateTimestamp(string FilePath)
        {
            return System.IO.File.GetCreationTime(FilePath);
        }

        /// <summary> Date and time at which the file was last modified. </summary>
        /// <returns></returns>
        public DateTime getLastModifiedTimestamp(string FilePath)
        {
            return System.IO.File.GetLastWriteTime(FilePath);
        }



        public bool isFileExist(string strHash, string strTargetTable, string strFileTable, string FileTableKey)
        {
            //Set default to false
            bool returnBool = false;
            //Query IF FILE RECORDS ALREADY EXIST
            SqlConnection existConn = (SqlConnection)(Dts.Connections["ADO.corridor_file_manager"].AcquireConnection(Dts.Transaction) as SqlConnection);
            string HashExistQueryString = "SELECT " + FileTableKey + " FROM [dbo].[" + strFileTable + "] WHERE file_hash = '" + strHash + "' AND agency_file_key IN (SELECT " + FileTableKey + " FROM dbo." + strTargetTable + ")";
            //string HashExistQueryString = "SELECT file_hash FROM [dbo].[agency_file] WHERE file_hash = '" + strHash + "' AND [agency_file_key] <> " + FileKey;
            //string HashExistQueryString = "SELECT file_hash FROM [dbo].[agency_file_row] WHERE file_hash = '" + strHash + "'";

            DataTable dt = new DataTable();

            //MessageBox.Show("File command Hash is: " + HashExistQueryString);

            using (SqlCommand HashExistcmd = new SqlCommand(HashExistQueryString, existConn))
            {
                SqlDataAdapter ad = new SqlDataAdapter(HashExistcmd);
                ad.Fill(dt);

                if (dt.Rows.Count > 0)
                {
                    //MessageBox.Show("Records already exist");
                    returnBool = true;
                }
                //else { MessageBox.Show("Records does not exist"); }
            }
            return returnBool;

        }

        /// <summary>Determines the branch (section of the folder path) within the trunk folder path and excluding the file name. </summary>
        /// <param name="TrunkFolderPath">The folder path below which the the folders comprise the branch.</param>
        /// <returns>Branch folder path below the trunk folder path and excluding the file name.</returns>
        public string FolderBranch(string TrunkFolderPath)
        {
            return GetFolderBranch(this.FilePath, TrunkFolderPath);
            //return TrunkFolderPath;
        }
        public static string GetFolderBranch(String FileName, string TrunkFolderPath)
        {
            // determine the file folder path
            string QualifiedFileFolderPath = System.IO.Path.GetDirectoryName(FileName);

            if (TrunkFolderPath == null || TrunkFolderPath.Trim().Length == 0)
            {
                return QualifiedFileFolderPath;
            }
            // determine if the last character of the trunk folder is not a path delimiter
            if (TrunkFolderPath.LastIndexOf("\\") != (TrunkFolderPath.Length - 1))
            {
                // append the path delimiter
                // necessary for correct processing of GetDirectoryName function
                TrunkFolderPath += "\\";
            }

            // determine the trunk folder path
            string QualifiedTrunkFolderPath = System.IO.Path.GetDirectoryName(TrunkFolderPath);

            if (QualifiedFileFolderPath.Equals(QualifiedTrunkFolderPath))
            {
                return String.Empty;
            }
            if (QualifiedTrunkFolderPath.Length > QualifiedFileFolderPath.Length)
            {
                throw new InvalidDataException("The trunk folder path exceeds the length of the file folder path.");

            }
            else if (!QualifiedFileFolderPath.Substring(0, QualifiedTrunkFolderPath.Length).Equals(QualifiedTrunkFolderPath))
            {
                throw new InvalidDataException("The trunk folder path does not exist in the file folder path.");

            }
            else
            {

                string DerivedFolderBranch = QualifiedFileFolderPath.Substring(QualifiedTrunkFolderPath.Length);

                // determine if the first character is a folder delimiter
                if (DerivedFolderBranch.IndexOf("\\") == 0)
                {
                    // strip the first character
                    DerivedFolderBranch = DerivedFolderBranch.Substring(1);
                }

                return DerivedFolderBranch;

            }
        }

        /// <summary> Unique file name comprised the original file name and the file hash. </summary>
        /// <returns></returns>
        //public string getArchiveFileName(string FilePath)
        //{
        //    return String.Concat(
        //            new string[] { this.FileNameWithoutExtension, "_", this._FileGuid, this.FileExtension });
        //}

        /// <summary> File class constructor. </summary>
        /// <param name = "FilePath" > Full path of the file.</param>
        //public File(String FilePath) : this(FilePath)
        //{
        //}

        /// <summary> File class constructor. </summary>
        /// <param name="FilePath">Full path of the file.</param>
        /// <param name="FileDefinition">FileDefinition used to validate the File.</param>
        //public File(String FilePath)
        //{
        //    this.FilePath = FilePath;
        //    this.FileDefinition = FileDefinition;

        //    this._FileGuid = Guid.NewGuid().ToString().Replace("-", String.Empty).ToUpper();


        //}


        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_29ffb30d5c364beb8b5474f7bae2e559</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_29ffb30d5c364beb8b5474f7bae2e559</msb:DisplayName>
		<msb:ProjectId>{157C75CC-0B74-4358-BA25-694F4CC61B78}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_29ffb30d5c364beb8b5474f7bae2e559.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="ColumnValue.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_29ffb30d5c364beb8b5474f7bae2e559")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_29ffb30d5c364beb8b5474f7bae2e559")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_29ffb30d5c364beb8b5474f7bae2e559.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_29ffb30d5c364beb8b5474f7bae2e559.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_29ffb30d5c364beb8b5474f7bae2e559.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_29ffb30d5c364beb8b5474f7bae2e559.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_29ffb30d5c364beb8b5474f7bae2e559.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_29ffb30d5c364beb8b5474f7bae2e559.dll">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
LgArAPABLgAzAPABLgA7APABLgBDAMcBLgBLAPYBLgBTAPABLgBbAA0CYwBjAD8BgwBrAD8BiQBz
AL4BqQBzAL4BQQF7AD8BHgCeAK8A1gDwAAMAAQAEAAQABQAGAAAAPwaDAQAAegaDAQAAfwGDAQAA
tgeHAQAAVgKMAQAAXgmRAQIABgADAAIABwAFAAIACAAHAAIAEQAJAAIAEgALAAEAEwALAAIAFAAN
AASAAAABAAAABBpDcQAAAAAAAAUAAAAEAAAAAAAAAAAAAAAoAYEAAAAAAA4AAAAAAAAAAAAAADEB
TwUAAAAABAAAAAAAAAAAAAAAKAFjAAAAAAAEAAAAAAAAAAAAAAAoAQAGAAAAAA4AAAAAAAAAAAAA
ADEBPAAAAAAAAAAAAAEAAABgCAAABgADAAAAAE1ENQBTVF8yOWZmYjMwZDVjMzY0YmViOGI1NDc0
ZjdiYWUyZTU1OQA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2Vk
RFRTAHZhbHVlX18AU3lzdGVtLkRhdGEAU3lzdGVtLkRhdGEuT2xlRGIAbXNjb3JsaWIAT3BlblJl
YWQAVGhyZWFkAE9sZURiU2NoZW1hR3VpZABfRmlsZUd1aWQAZ2V0RmlsZUd1aWQATmV3R3VpZABE
YkNvbW1hbmQAU3FsQ29tbWFuZABSZXBsYWNlAGRlZmF1bHRJbnN0YW5jZQBHZXRPbGVEYlNjaGVt
YVRhYmxlAERhdGFUYWJsZQBzdHJGaWxlVGFibGUAc3RyVGFyZ2V0VGFibGUAVmFyaWFibGUASURp
c3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARmlsZQBnZXRfVGFi
bGVOYW1lAGdldF9BcmNoaXZlRmlsZU5hbWUAR2V0RmlsZU5hbWUAZ2V0RmlsZU5hbWUAc291cmNl
Q29sdW1uTmFtZQBkZXN0aW5hdGlvbkNvbHVtbk5hbWUAR2V0RGlyZWN0b3J5TmFtZQBEYXRlVGlt
ZQBHZXRMYXN0V3JpdGVUaW1lAEdldENyZWF0aW9uVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5SdW50aW1lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1
bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEludGVybmFsRGF0YUNvbGxlY3Rpb25C
YXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAENsb3NlAERpc3Bvc2UAQ3JlYXRlAEVkaXRvckJy
b3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNv
ZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUA
QXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRG
cmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5
RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3Nl
bWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1Njcmlw
dFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1l
Q29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAEFkZFdpdGhWYWx1ZQBD
b2x1bW5WYWx1ZQB2YWx1ZQBMYXN0SW5kZXhPZgBTeXN0ZW0uVGhyZWFkaW5nAFN5c3RlbS5SdW50
aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAU3Vic3RyaW5nAEdldEZvbGRlckJyYW5jaABnZXRGaWxl
SGFzaABDb21wdXRlSGFzaABzdHJIYXNoAEZpbGVQYXRoAFRydW5rRm9sZGVyUGF0aABEaXJlY3Rv
cnlQYXRoAGdldF9MZW5ndGgATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVt
LkNvbXBvbmVudE1vZGVsAFNUXzI5ZmZiMzBkNWMzNjRiZWI4YjU0NzRmN2JhZTJlNTU5LmRsbABG
aWxsAEZpbGVTdHJlYW0AZ2V0X0l0ZW0AU3lzdGVtAEhhc2hBbGdvcml0aG0AVHJpbQBFbnVtAHJl
c291cmNlTWFuAE9wZW4AU2NyaXB0TWFpbgBnZXRfRmlsZUV4dGVuc2lvbgBHZXRFeHRlbnNpb24A
Z2V0X0ZpbGVOYW1lV2l0aG91dEV4dGVuc2lvbgBHZXRGaWxlTmFtZVdpdGhvdXRFeHRlbnNpb24A
U3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AZ2V0X1RyYW5zYWN0aW9u
AFN5c3RlbS5SZWZsZWN0aW9uAFNxbFBhcmFtZXRlckNvbGxlY3Rpb24ARGF0YVJvd0NvbGxlY3Rp
b24AT2xlRGJDb25uZWN0aW9uAEFjcXVpcmVDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24ASW52YWxp
ZERhdGFFeGNlcHRpb24AU3lzdGVtLkRhdGEuQ29tbW9uAEN1bHR1cmVJbmZvAFNsZWVwAGdldExh
c3RNb2RpZmllZFRpbWVzdGFtcABnZXRDcmVhdGVUaW1lc3RhbXAAQ2xlYXIARXhlY3V0ZVNjYWxh
cgBnZXRfUmVzb3VyY2VNYW5hZ2VyAENvbm5lY3Rpb25NYW5hZ2VyAFNxbFBhcmFtZXRlcgBEYkRh
dGFBZGFwdGVyAFNxbERhdGFBZGFwdGVyAEJpdENvbnZlcnRlcgAuY3RvcgAuY2N0b3IAU3lzdGVt
LkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291
cmNlcwBTVF8yOWZmYjMwZDVjMzY0YmViOGI1NDc0ZjdiYWUyZTU1OS5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfMjlmZmIzMGQ1YzM2NGJlYjhiNTQ3NGY3
YmFlMmU1NTkuUHJvcGVydGllcwBUYWJsZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBFcXVhbHMA
Z2V0X0Nvbm5lY3Rpb25zAGdldF9QYXJhbWV0ZXJzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1
bHRzAGdldF9Sb3dzAENvbmNhdABPYmplY3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAU3lz
dGVtLkRhdGEuU3FsQ2xpZW50AE1hcnNoYWxCeVZhbHVlQ29tcG9uZW50AGdldF9Db3VudABpc0Zp
bGVFeGlzdABjb2x1bW5JbmRleABGaWxlVGFibGVLZXkAc3RyRmlsZUtleQBTeXN0ZW0uU2VjdXJp
dHkuQ3J5cHRvZ3JhcGh5AGdldF9Bc3NlbWJseQBFbXB0eQAAAAAAH1UAcwBlAHIAOgA6AGYAaQBs
AGUAXwBwAGEAdABoAAA1VQBzAGUAcgA6ADoAcgBlAGMAZQBpAHYAZQBkAF8AcgBvAG8AdABfAGYA
bwBsAGQAZQByAAAfVQBzAGUAcgA6ADoAZgBpAGwAZQBfAGgAYQBzAGgAAB9VAHMAZQByADoAOgBi
AGEAdABjAGgAXwBrAGUAeQAAI1UAcwBlAHIAOgA6AFQAYQByAGcAZQB0AFQAYQBiAGwAZQAAH1UA
cwBlAHIAOgA6AEYAaQBsAGUAVABhAGIAbABlAAAlVQBzAGUAcgA6ADoARgBpAGwAZQBUAGEAYgBs
AGUASwBlAHkAAB9VAHMAZQByADoAOgBmAGkAbABlAF8AbgBhAG0AZQAAM0EARABPAC4AYwBvAHIA
cgBpAGQAbwByAF8AZgBpAGwAZQBfAG0AYQBuAGEAZwBlAHIAAENTAEUATABFAEMAVAAgACoAIABG
AFIATwBNACAAZABiAG8ALgBhAGcAZQBuAGMAeQBfAGYAaQBsAGUAXwByAG8AdwAAgb9TAEUATABF
AEMAVAAgAGEAZwBlAG4AYwB5AF8AZgBpAGwAZQBfAGsAZQB5ACAARgBSAE8ATQAoAFMARQBMAEUA
QwBUACAAYQBnAGUAbgBjAHkAXwBmAGkAbABlAF8AawBlAHkALAAgAFIATwBXAF8ATgBVAE0AQgBF
AFIAKAApACAATwBWAEUAUgAoAFAAQQBSAFQASQBUAEkATwBOACAAQgBZACAAZgBpAGwAZQBfAGgA
YQBzAGgAIABPAFIARABFAFIAIABCAFkAIABhAGcAZQBuAGMAeQBfAGYAaQBsAGUAXwBrAGUAeQAp
ACAAcgBuAHUAbQAgAEYAUgBPAE0AWwBkAGIAbwBdAC4AWwBhAGcAZQBuAGMAeQBfAGYAaQBsAGUA
XQAgAFcASABFAFIARQAgAGYAaQBsAGUAXwBoAGEAcwBoACAAPQAgAEAAZgBpAGwAZQBIAGEAcwBo
ACAAQQBOAEQAIABuAG8AdABpAGYAaQBjAGEAdABpAG8AbgBfAHMAZQBuAHQAXwBpAG4AZAAgAD0A
IAAxACkAIABBACAAVwBIAEUAUgBFACAAcgBuAHUAbQAgAD0AIAAxAAATQABmAGkAbABlAEgAYQBz
AGgAACdVAHMAZQByADoAOgBmAG8AbABkAGUAcgBfAGIAcgBhAG4AYwBoAAAHWQBFAFMAAF1QAHIA
bwB2AGkAZABlAHIAPQBNAGkAYwByAG8AcwBvAGYAdAAuAEEAQwBFAC4ATwBMAEUARABCAC4AMQAy
AC4AMAA7AEQAYQB0AGEAIABTAG8AdQByAGMAZQA9AABLOwBFAHgAdABlAG4AZABlAGQAIABQAHIA
bwBwAGUAcgB0AGkAZQBzAD0AIgBFAHgAYwBlAGwAIAAxADIALgAwADsASABEAFIAPQAAAyIAAAMt
AAEDXwAAD1MARQBMAEUAQwBUACAAABsgAEYAUgBPAE0AIABbAGQAYgBvAF0ALgBbAAArXQAgAFcA
SABFAFIARQAgAGYAaQBsAGUAXwBoAGEAcwBoACAAPQAgACcAAUMnACAAQQBOAEQAIABhAGcAZQBu
AGMAeQBfAGYAaQBsAGUAXwBrAGUAeQAgAEkATgAgACgAUwBFAEwARQBDAFQAIAABFSAARgBSAE8A
TQAgAGQAYgBvAC4AAAMpAAADXAAAgINUAGgAZQAgAHQAcgB1AG4AawAgAGYAbwBsAGQAZQByACAA
cABhAHQAaAAgAGUAeABjAGUAZQBkAHMAIAB0AGgAZQAgAGwAZQBuAGcAdABoACAAbwBmACAAdABo
AGUAIABmAGkAbABlACAAZgBvAGwAZABlAHIAIABwAGEAdABoAC4AAHtUAGgAZQAgAHQAcgB1AG4A
awAgAGYAbwBsAGQAZQByACAAcABhAHQAaAAgAGQAbwBlAHMAIABuAG8AdAAgAGUAeABpAHMAdAAg
AGkAbgAgAHQAaABlACAAZgBpAGwAZQAgAGYAbwBsAGQAZQByACAAcABhAHQAaAAuAABxUwBUAF8A
MgA5AGYAZgBiADMAMABkADUAYwAzADYANABiAGUAYgA4AGIANQA0ADcANABmADcAYgBhAGUAMgBl
ADUANQA5AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAACdoC0x
t8RfR5Kw9e+6Jn2ZAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFxAgYOFQcODg4ODg4ODhJBEkUS
SQ4OEk0SUQUgABKAhQUgABKAiQYgARKAjRwDIAAcAyAADgQgAQEcBSAAEoCRBiABEoCVHAQgARwc
BiACAQ4SQQUgAQgSRQUgABKAoQcgAhKApQ4cBQABDh0OAwYRVQggAhJFEVUdHAQAAQEIBAABDg4F
BwIRVQ4EAAARVQUgAg4ODgYHAhJZHQUFAAESWQ4FAAASgMUHIAEdBRKAzQUAAQ4dBQUAARFdDgkH
BAISQRJFEkkFIAEBEkkFIAASgNUDIAAIBQcDDg4OBCABCA4FAAIODg4EIAECDgUgAg4ICAQgAQ4I
CAABEoDhEYDlBSAAEoDpByACAQ4SgOkIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAgYIAwYS
aQMGEm0DBhIUAwYRGAQgAQ4OBSABEV0OByAEAg4ODg4EAAASaQQAABJtBQABARJtBAAAEhQDAAAB
AygADgQIABJpBAgAEm0ECAASFAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93
cwEIAQACAAAAAAAoAQAjU1RfMjlmZmIzMGQ1YzM2NGJlYjhiNTQ3NGY3YmFlMmU1NTkAAAUBAAAA
ABYBABFDb3B5cmlnaHQgQCAgMjAxOAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBU
DhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUAtAAAAM7K774BAAAAkQAA
AGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAu
MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lz
dGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAFRB
AAAAAAAAAAAAAG5BAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgQQAAAAAAAAAAAAAAAF9Db3JE
bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
ABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQBDcQQaAAABAENxBBo/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAANABi
ADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEA
bQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABf
ADIAOQBmAGYAYgAzADAAZAA1AGMAMwA2ADQAYgBlAGIAOABiADUANAA3ADQAZgA3AGIAYQBlADIA
ZQA1ADUAOQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADYANgAw
AC4AMgA4ADkAOQA1AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADIA
OQBmAGYAYgAzADAAZAA1AGMAMwA2ADQAYgBlAGIAOABiADUANAA3ADQAZgA3AGIAYQBlADIAZQA1
ADUAOQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAA
eQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA4AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBt
AGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAA
UwBUAF8AMgA5AGYAZgBiADMAMABkADUAYwAzADYANABiAGUAYgA4AGIANQA0ADcANABmADcAYgBh
AGUAMgBlADUANQA5AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMA
VABfADIAOQBmAGYAYgAzADAAZAA1AGMAMwA2ADQAYgBlAGIAOABiADUANAA3ADQAZgA3AGIAYQBl
ADIAZQA1ADUAOQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4A
NgA2ADYAMAAuADIAOAA5ADkANQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANgA2ADYAMAAuADIAOAA5ADkANQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAACAMQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Recurse Through Received Folders\Set Default File Format"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{09344afa-54f0-4acc-9e69-30d52f32a469}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set Default File Format"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BCCC69F7-9246-4FF6-8C73-70803CE6E178}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::defaultFileFormatQuery"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="default_file_format_code"
                SQLTask:DtsVariableName="User::default_file_format_code" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="agency_name"
                SQLTask:DtsVariableName="User::agency_name" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::folder_branch"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Recurse Through Received Folders\Set File Attributes"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{3D8A4777-2DAE-43EC-8FB8-024F811CF8CA}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set File Attributes"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_169f465dc0d8499c9ec30631dccc1653"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp">
              <ProjectItem
                Name="ST_169f465dc0d8499c9ec30631dccc1653.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{aa8d0983-7770-48ec-b4fd-78e65dbc0a95}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_169f465dc0d8499c9ec30631dccc1653</RootNamespace>
    <AssemblyName>ST_169f465dc0d8499c9ec30631dccc1653</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_169f465dc0d8499c9ec30631dccc1653.Properties.Settings.get_Default():ST_169f465dc0d8499c9ec30631dccc1653.Properties.Sett" +
    "ings")]

namespace ST_169f465dc0d8499c9ec30631dccc1653.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Data.OleDb;
using System.Data.SqlClient;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Security.Cryptography;

#endregion

namespace ST_169f465dc0d8499c9ec30631dccc1653
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        private string _FileGuid = null;
        public String FilePath;
        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
		{
            // TODO: Add your code here
            string FilePath = Dts.Variables["User::file_path"].Value.ToString();
            //string ReceivedFolderPath = Dts.Variables["User::ReceivedFolderPath"].Value.ToString();
            string ReceivedRootFolder = Dts.Variables["User::received_root_folder"].Value.ToString();



            this.FilePath = FilePath;
            string FileHash = getFileHash(FilePath);
            string FileName = getFileName(FilePath);
            string FileGuid = getFileGuid(FilePath);
            string FolderPath = DirectoryPath(FilePath);
            DateTime CreateTimestamp = getCreateTimestamp(FilePath);
            DateTime LastModifiedTimestamp = getLastModifiedTimestamp(FilePath);

            Dts.Variables["User::file_hash"].Value = FileHash;
            Dts.Variables["User::file_guid"].Value = FileGuid;
            Dts.Variables["User::file_name"].Value = FileName;
            Dts.Variables["User::file_created_dtm"].Value = CreateTimestamp;
            Dts.Variables["User::file_modified_dtm"].Value = LastModifiedTimestamp;
            Dts.Variables["User::folder_path"].Value = FolderPath;
            Dts.Variables["User::archive_file_name"].Value = ArchiveFileName;

            string strFolderBranch = FolderBranch(ReceivedRootFolder);
            Dts.Variables["User::folder_branch"].Value = (strFolderBranch == null) ? "DO NOT PROCESS" : strFolderBranch;
            //Dts.Variables["User::folder_branch"].Value = strFolderBranch;
            //Dts.Variables["User::folder_branch"].Value = (strFolderBranch == null) ? String.Empty : strFolderBranch;

            //MessageBox.Show("Excel File Name:" + FileName
            //+ "\n File Hash:  " + FileHash
            //+ "\n Folder Path:  " + FolderPath
            //+ "\n Folder Branch:  " + strFolderBranch
            //+ "\n File Modified Date:  " + LastModifiedTimestamp
            //+ "\n File Size:  " + FileName.Length / 1024
            //+ "\n FileLastAccessTime:  " + CreateTimestamp);

            string HDR = "YES";

            //Create Excel Connection String
            string ConStr = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + FilePath + ";Extended Properties=\"Excel 12.0;HDR=" + HDR + "\"";
            OleDbConnection excelConnection = new OleDbConnection(ConStr);

            //Get Sheet 
            excelConnection.Open();
            DataTable dtSheet = excelConnection.GetOleDbSchemaTable(OleDbSchemaGuid.Tables, null); ;
            string tablename = dtSheet.TableName;

            //Only read data from provided SheetNumber

            foreach (DataRow drSheet in dtSheet.Rows)
            {
                if (!drSheet["TABLE_NAME"].ToString().Contains("FilterDatabase")) //drSheet["TABLE_NAME"].ToString().Contains("Demographics") &&
                {
                    string worksheetname = drSheet["TABLE_NAME"].ToString();
                    Dts.Variables["User::worksheet_name"].Value = worksheetname;
                    //MessageBox.Show("Worksheet Name: " + worksheetname);
                }

            }
            //MessageBox.Show("Received Root Folder: " + ReceivedRootFolder);
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        /// <summary>File name component of the file specified in the FilePath.</summary>
        /// <returns>Returns the file name with a path.</returns>
        public string getFileName(string FilePath)
        {
            return System.IO.Path.GetFileName(FilePath);
        }

        /// <summary> File name component of the file specified in the FilePath. </summary>
        /// <returns>Returns the file name with a path.</returns>
        public string getFileGuid(string FilePath)
        {
            return this._FileGuid = Guid.NewGuid().ToString().Replace("-", String.Empty).ToString();
        }

        /// <summary> File name component of the file specified in the FilePath. </summary>
        /// <returns>Returns the file name with a path.</returns>
        public string getFileHash(string FilePath)
        {
            FileStream fs = System.IO.File.OpenRead(FilePath);

            MD5 md5hasher = MD5.Create();
            byte[] hash = md5hasher.ComputeHash(fs);

            md5hasher.Clear();
            fs.Close();

            return BitConverter.ToString(hash).Replace("-", String.Empty);
        }

        /// <summary> File extension of the file specified in the FilePath. </summary>
        /// <returns></returns>
        public string FileExtension
        {
            get
            {
                return System.IO.Path.GetExtension(this.FilePath);
            }
        }

        /// <summary> File name of the file specified in the FilePath excluding the file extension suffix. </summary>
        /// <returns></returns>
        public string FileNameWithoutExtension
        {
            get
            {
                return System.IO.Path.GetFileNameWithoutExtension(this.FilePath);
            }
        }

        /// <summary> Unique file name comprised the original file name and the file hash. </summary>
        /// <returns></returns>
        public string ArchiveFileName
        {
            get
            {
                return String.Concat(
                    new string[] { this.FileNameWithoutExtension, "_", this._FileGuid, this.FileExtension });
            }
        }

        /// <summary> Directory component of the file specified in the FilePath. </summary>
        /// <returns></returns>
        public string DirectoryPath(string FilePath)
        {
            return System.IO.Path.GetDirectoryName(FilePath);
        }

        /// <summary> Date and time at which the file was created. </summary>
        /// <returns></returns>
        public DateTime getCreateTimestamp(string FilePath)
        {
            return System.IO.File.GetCreationTime(FilePath);
        }

        /// <summary> Date and time at which the file was last modified. </summary>
        /// <returns></returns>
        public DateTime getLastModifiedTimestamp(string FilePath)
        {
            return System.IO.File.GetLastWriteTime(FilePath);
        }



        public bool isFileExist(string strHash)
        {
            //Set default to false
            bool returnBool = false;
            //Query IF FILE RECORDS ALREADY EXIST
            SqlConnection existConn = (SqlConnection)(Dts.Connections["ADO.corridor_file_manager"].AcquireConnection(Dts.Transaction) as SqlConnection);
            string HashExistQueryString = "SELECT file_hash FROM [dbo].[agency_file_row] WHERE file_hash = '" + strHash + "'";
            DataTable dt = new DataTable();

            //MessageBox.Show("File command Hash is: " + HashExistQueryString);

            using (SqlCommand HashExistcmd = new SqlCommand(HashExistQueryString, existConn))
            {
                SqlDataAdapter ad = new SqlDataAdapter(HashExistcmd);
                ad.Fill(dt);

                if (dt.Rows.Count > 0)
                {
                    //MessageBox.Show("Records already exist");
                    returnBool = true;
                }
            }
            return returnBool;

        }

        /// <summary>Determines the branch (section of the folder path) within the trunk folder path and excluding the file name. </summary>
        /// <param name="TrunkFolderPath">The folder path below which the the folders comprise the branch.</param>
        /// <returns>Branch folder path below the trunk folder path and excluding the file name.</returns>
        public string FolderBranch(string TrunkFolderPath)
        {
            return GetFolderBranch(this.FilePath, TrunkFolderPath);
            //return TrunkFolderPath;
        }
        public static string GetFolderBranch(String FileName, string TrunkFolderPath)
        {
            // determine the file folder path
            string QualifiedFileFolderPath = System.IO.Path.GetDirectoryName(FileName);

            if (TrunkFolderPath == null || TrunkFolderPath.Trim().Length == 0)
            {
                return QualifiedFileFolderPath;
            }
            // determine if the last character of the trunk folder is not a path delimiter
            if (TrunkFolderPath.LastIndexOf("\\") != (TrunkFolderPath.Length - 1))
            {
                // append the path delimiter
                // necessary for correct processing of GetDirectoryName function
                TrunkFolderPath += "\\";
            }

            // determine the trunk folder path
            string QualifiedTrunkFolderPath = System.IO.Path.GetDirectoryName(TrunkFolderPath);

            if (QualifiedFileFolderPath.Equals(QualifiedTrunkFolderPath))
            {
                return String.Empty;
            }
            if (QualifiedTrunkFolderPath.Length > QualifiedFileFolderPath.Length)
            {
                throw new InvalidDataException("The trunk folder path exceeds the length of the file folder path.");

            }
            else if (!QualifiedFileFolderPath.Substring(0, QualifiedTrunkFolderPath.Length).Equals(QualifiedTrunkFolderPath))
            {
                throw new InvalidDataException("The trunk folder path does not exist in the file folder path.");

            }
            else
            {

                string DerivedFolderBranch = QualifiedFileFolderPath.Substring(QualifiedTrunkFolderPath.Length);

                // determine if the first character is a folder delimiter
                if (DerivedFolderBranch.IndexOf("\\") == 0)
                {
                    // strip the first character
                    DerivedFolderBranch = DerivedFolderBranch.Substring(1);
                }

                return DerivedFolderBranch;

            }
        }

        /// <summary> Unique file name comprised the original file name and the file hash. </summary>
        /// <returns></returns>
        //public string getArchiveFileName(string FilePath)
        //{
        //    return String.Concat(
        //            new string[] { this.FileNameWithoutExtension, "_", this._FileGuid, this.FileExtension });
        //}

        /// <summary> File class constructor. </summary>
        /// <param name = "FilePath" > Full path of the file.</param>
        //public File(String FilePath) : this(FilePath)
        //{
        //}

        /// <summary> File class constructor. </summary>
        /// <param name="FilePath">Full path of the file.</param>
        /// <param name="FileDefinition">FileDefinition used to validate the File.</param>
        //public File(String FilePath)
        //{
        //    this.FilePath = FilePath;
        //    this.FileDefinition = FileDefinition;

        //    this._FileGuid = Guid.NewGuid().ToString().Replace("-", String.Empty).ToUpper();


        //}


        /// <summary> File class constructor. </summary>
        /// <param name="FilePath">Full path of the file.</param>
        /// <param name="FileDefinition">FileDefinition used to validate the File.</param>
        //public File(String FilePath)
        //{
        //    this.FilePath = FilePath;
        //    //this.FileDefinition = FileDefinition;

        //    this._FileGuid = Guid.NewGuid().ToString().Replace("-", String.Empty).ToUpper();
        //}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion



	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_169f465dc0d8499c9ec30631dccc1653</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_169f465dc0d8499c9ec30631dccc1653</msb:DisplayName>
		<msb:ProjectId>{B4192F35-B46E-470A-922F-DE27C843B1A0}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_169f465dc0d8499c9ec30631dccc1653.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_169f465dc0d8499c9ec30631dccc1653")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_169f465dc0d8499c9ec30631dccc1653")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_169f465dc0d8499c9ec30631dccc1653.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_169f465dc0d8499c9ec30631dccc1653.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_169f465dc0d8499c9ec30631dccc1653.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_169f465dc0d8499c9ec30631dccc1653.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_169f465dc0d8499c9ec30631dccc1653.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_169f465dc0d8499c9ec30631dccc1653.dll">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
cgRZAQgAXCQAAAAAlgBvBAIBCQAWJQAAAACGGHMHBgALAB4lAAAAAIMYcwcGAAsAJiUAAAAAkwgJ
B2QBCwBSJQAAAACTCOIBaQELAFklAAAAAJMI7gFuAQsAYSUAAAAAlgjLCHQBDABoJQAAAACGGHMH
BgAMAHAlAAAAAJEYeQd5AQwAAAABAJ8EAAABAJ8EAAABAJ8EAAABAJ8EAAABAJ8EAAABAJ8EAAAB
AJcEAAABAKgEAAABAHEBAAACAKgEAAABADAECQBzBwEAEQBzBwYAGQBzBwoAKQBzBxAAMQBzBxAA
OQBzBxAAQQBzBxAASQBzBxAAUQBzBxAAWQBzBxAAYQBzBxAAaQBzBwYAyQBzBwYA8QBzBxUAAQFz
BwYAcQCeCDEACQFMCDcAEQF5BT0AGQEcBEQA0QBcBEgAGQEmBEwAIQG9CFEAKQFzBxAAMQGtBQYA
OQFFCFcAKQHkAFsAsQBAAUgAsQC0CGQASQFlB2oAgQD8CEQAiQB5BW8AIQFqCHQAgQAeCXkAkQBf
AgYACQHXCAEAUQFiAX0AmQC5AIgAIQFZCY0AIQHMAJAAWQGKAJ0AYQFnAqMAaQGLBKkAaQEDBwYA
cQFZAgYAeQFcBLEAUQHPBX0AUQH5BX0AUQF6AX0AWQGlAbcAWQGUAbcACQGGCMcAgQF5Bc0ACQE/
BkQAiQGDBtQAIQG9CNkAsQBzBwYAuQBzB+AAkQFzB+cAmQFpBe0ASQEICfMAIQGXBUgAIQHGBPMA
IQE2BP0AIQG9CAIBIQFjCHQAoQFzBxAAIQFlBAgBIQFlBA4BIQE6BP0AcQBzBwYA0QBzBwYAqQEp
ARMBqQFMCRwB2QBzByIB+QBzBwYACAAcADwBCAAgAEEBLgALAJABLgATAJkBLgAbALgBLgAjAMEB
LgArAOoBLgAzAOoBLgA7AOoBLgBDAMEBLgBLAPABLgBTAOoBLgBbAAcCQwBjAEEBYwBrAEEBiQBz
ALgBoQB7AEEBqQBzALgBGwCCAJYAvQD3AAIAAQADAAQABAAGAAAAwQV9AQAA/AV9AQAAUgF9AQAA
DQeBAQAAAgKGAQAAzwiLAQIABQADAAIABgAFAAIABwAHAAIAEAAJAAIAEQALAAEAEgALAAIAEwAN
AASAAAABAAAABBpEcQAAAAAAAAEAAAAEAAAAAAAAAAAAAAAqAYEAAAAAAA4AAAAAAAAAAAAAADMB
0QQAAAAABAAAAAAAAAAAAAAAKgFjAAAAAAAEAAAAAAAAAAAAAAAqAYIFAAAAAA4AAAAAAAAAAAAA
ADMBPAAAAAAAAAAAAAEAAADEBwAABQACAAAAAFNUXzE2OWY0NjVkYzBkODQ5OWM5ZWMzMDYzMWRj
Y2MxNjUzAE1ENQA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2Vk
RFRTAHZhbHVlX18AU3lzdGVtLkRhdGEAU3lzdGVtLkRhdGEuT2xlRGIAbXNjb3JsaWIAT3BlblJl
YWQAT2xlRGJTY2hlbWFHdWlkAF9GaWxlR3VpZABnZXRGaWxlR3VpZABOZXdHdWlkAFNxbENvbW1h
bmQAUmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UAR2V0T2xlRGJTY2hlbWFUYWJsZQBEYXRhVGFibGUA
VmFyaWFibGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUA
RmlsZQBnZXRfVGFibGVOYW1lAGdldF9BcmNoaXZlRmlsZU5hbWUAR2V0RmlsZU5hbWUAZ2V0Rmls
ZU5hbWUAR2V0RGlyZWN0b3J5TmFtZQBEYXRlVGltZQBHZXRMYXN0V3JpdGVUaW1lAEdldENyZWF0
aW9uVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBnZXRf
Q3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9k
ZWxCYXNlAEludGVybmFsRGF0YUNvbGxlY3Rpb25CYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNl
AENsb3NlAERpc3Bvc2UAQ3JlYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJh
dGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJp
YnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlD
b25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGls
YXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1i
bHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFz
c2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRf
VmFsdWUAc2V0X1ZhbHVlAHZhbHVlAExhc3RJbmRleE9mAFN5c3RlbS5SdW50aW1lLlZlcnNpb25p
bmcAVG9TdHJpbmcAU3Vic3RyaW5nAEdldEZvbGRlckJyYW5jaABnZXRGaWxlSGFzaABDb21wdXRl
SGFzaABzdHJIYXNoAEZpbGVQYXRoAFRydW5rRm9sZGVyUGF0aABEaXJlY3RvcnlQYXRoAGdldF9M
ZW5ndGgATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1v
ZGVsAFNUXzE2OWY0NjVkYzBkODQ5OWM5ZWMzMDYzMWRjY2MxNjUzLmRsbABGaWxsAEZpbGVTdHJl
YW0AZ2V0X0l0ZW0AU3lzdGVtAEhhc2hBbGdvcml0aG0AVHJpbQBFbnVtAHJlc291cmNlTWFuAE9w
ZW4AU2NyaXB0TWFpbgBnZXRfRmlsZUV4dGVuc2lvbgBHZXRFeHRlbnNpb24AZ2V0X0ZpbGVOYW1l
V2l0aG91dEV4dGVuc2lvbgBHZXRGaWxlTmFtZVdpdGhvdXRFeHRlbnNpb24AU3lzdGVtLkNvbmZp
Z3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AZ2V0X1RyYW5zYWN0aW9uAFN5c3RlbS5SZWZs
ZWN0aW9uAERhdGFSb3dDb2xsZWN0aW9uAE9sZURiQ29ubmVjdGlvbgBBY3F1aXJlQ29ubmVjdGlv
bgBTcWxDb25uZWN0aW9uAEludmFsaWREYXRhRXhjZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBD
dWx0dXJlSW5mbwBnZXRMYXN0TW9kaWZpZWRUaW1lc3RhbXAAZ2V0Q3JlYXRlVGltZXN0YW1wAENs
ZWFyAGdldF9SZXNvdXJjZU1hbmFnZXIAQ29ubmVjdGlvbk1hbmFnZXIARGJEYXRhQWRhcHRlcgBT
cWxEYXRhQWRhcHRlcgBCaXRDb252ZXJ0ZXIASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgAuY3Rv
cgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2Vydmlj
ZXMAU3lzdGVtLlJlc291cmNlcwBTVF8xNjlmNDY1ZGMwZDg0OTljOWVjMzA2MzFkY2NjMTY1My5Q
cm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfMTY5ZjQ2NWRj
MGQ4NDk5YzllYzMwNjMxZGNjYzE2NTMuUHJvcGVydGllcwBUYWJsZXMAZ2V0X1ZhcmlhYmxlcwBT
ZXR0aW5ncwBFcXVhbHMAQ29udGFpbnMAU3lzdGVtLkNvbGxlY3Rpb25zAGdldF9Db25uZWN0aW9u
cwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfUm93cwBDb25jYXQAT2JqZWN0AGdl
dF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AFN5c3RlbS5EYXRhLlNxbENsaWVudABnZXRfQ3VycmVu
dABnZXRfQ291bnQAaXNGaWxlRXhpc3QATW92ZU5leHQARGF0YVJvdwBTeXN0ZW0uU2VjdXJpdHku
Q3J5cHRvZ3JhcGh5AGdldF9Bc3NlbWJseQBFbXB0eQAAAB9VAHMAZQByADoAOgBmAGkAbABlAF8A
cABhAHQAaAAANVUAcwBlAHIAOgA6AHIAZQBjAGUAaQB2AGUAZABfAHIAbwBvAHQAXwBmAG8AbABk
AGUAcgAAH1UAcwBlAHIAOgA6AGYAaQBsAGUAXwBoAGEAcwBoAAAfVQBzAGUAcgA6ADoAZgBpAGwA
ZQBfAGcAdQBpAGQAAB9VAHMAZQByADoAOgBmAGkAbABlAF8AbgBhAG0AZQAALVUAcwBlAHIAOgA6
AGYAaQBsAGUAXwBjAHIAZQBhAHQAZQBkAF8AZAB0AG0AAC9VAHMAZQByADoAOgBmAGkAbABlAF8A
bQBvAGQAaQBmAGkAZQBkAF8AZAB0AG0AACNVAHMAZQByADoAOgBmAG8AbABkAGUAcgBfAHAAYQB0
AGgAAC9VAHMAZQByADoAOgBhAHIAYwBoAGkAdgBlAF8AZgBpAGwAZQBfAG4AYQBtAGUAACdVAHMA
ZQByADoAOgBmAG8AbABkAGUAcgBfAGIAcgBhAG4AYwBoAAAdRABPACAATgBPAFQAIABQAFIATwBD
AEUAUwBTAAAHWQBFAFMAAF1QAHIAbwB2AGkAZABlAHIAPQBNAGkAYwByAG8AcwBvAGYAdAAuAEEA
QwBFAC4ATwBMAEUARABCAC4AMQAyAC4AMAA7AEQAYQB0AGEAIABTAG8AdQByAGMAZQA9AABLOwBF
AHgAdABlAG4AZABlAGQAIABQAHIAbwBwAGUAcgB0AGkAZQBzAD0AIgBFAHgAYwBlAGwAIAAxADIA
LgAwADsASABEAFIAPQAAAyIAABVUAEEAQgBMAEUAXwBOAEEATQBFAAAdRgBpAGwAdABlAHIARABh
AHQAYQBiAGEAcwBlAAApVQBzAGUAcgA6ADoAdwBvAHIAawBzAGgAZQBlAHQAXwBuAGEAbQBlAAAD
LQABA18AADNBAEQATwAuAGMAbwByAHIAaQBkAG8AcgBfAGYAaQBsAGUAXwBtAGEAbgBhAGcAZQBy
AACAg1MARQBMAEUAQwBUACAAZgBpAGwAZQBfAGgAYQBzAGgAIABGAFIATwBNACAAWwBkAGIAbwBd
AC4AWwBhAGcAZQBuAGMAeQBfAGYAaQBsAGUAXwByAG8AdwBdACAAVwBIAEUAUgBFACAAZgBpAGwA
ZQBfAGgAYQBzAGgAIAA9ACAAJwABAycAAQNcAACAg1QAaABlACAAdAByAHUAbgBrACAAZgBvAGwA
ZABlAHIAIABwAGEAdABoACAAZQB4AGMAZQBlAGQAcwAgAHQAaABlACAAbABlAG4AZwB0AGgAIABv
AGYAIAB0AGgAZQAgAGYAaQBsAGUAIABmAG8AbABkAGUAcgAgAHAAYQB0AGgALgAAe1QAaABlACAA
dAByAHUAbgBrACAAZgBvAGwAZABlAHIAIABwAGEAdABoACAAZABvAGUAcwAgAG4AbwB0ACAAZQB4
AGkAcwB0ACAAaQBuACAAdABoAGUAIABmAGkAbABlACAAZgBvAGwAZABlAHIAIABwAGEAdABoAC4A
AHFTAFQAXwAxADYAOQBmADQANgA1AGQAYwAwAGQAOAA0ADkAOQBjADkAZQBjADMAMAA2ADMAMQBk
AGMAYwBjADEANgA1ADMALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMA
AADi11ckOtHQT5M8cbR8bs1kAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARF1FQcODg4ODg4OET0R
PQ4OEkESRQ4SSQUgABKAhQUgABKAiQYgARKAjRwDIAAcAyAADgQgAQEcBQABDh0OAwYRTQggAhJZ
EU0dHAUgABKAoQQgABJBBCABHA4EIAECDgMgAAIEAAEODgUHAhFNDgQAABFNAgYOBSACDg4OBgcC
ElEdBQUAARJRDgUAABKAsQcgAR0FEoC5BQABDh0FBQABET0OCQcEAhJVElkSXQUgABKAwQYgARKA
xRwEIAEcHAYAAw4ODg4GIAIBDhJVBSABARJdBSABCBJZAyAACAUHAw4ODgQgAQgOBQACDg4OBSAC
DggIBCABDggIAAESgNURgNkFIAASgN0HIAIBDhKA3Qi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEA
AAADBhJtAwYScQMGEhACBggDBhEUBCABDg4FIAERPQ4EAAASbQQAABJxBQABARJxBAAAEhADAAAB
AygADgQIABJtBAgAEnEECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93
cwEIAQACAAAAAAAoAQAjU1RfMTY5ZjQ2NWRjMGQ4NDk5YzllYzMwNjMxZGNjYzE2NTMAAAUBAAAA
ABYBABFDb3B5cmlnaHQgQCAgMjAxOAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBU
DhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUAAAC0AAAAzsrvvgEAAACR
AAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQu
MC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNT
eXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA
OD4AAAAAAAAAAAAAUj4AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEQ+AAAAAAAAAAAAAAAAX0Nv
ckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQ
AAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhA
AAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv
/gAAAQAAAAEARHEEGgAAAQBEcQQaPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYA
YQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAA
ALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQA
YgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBh
AG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwAxADYAOQBmADQANgA1AGQAYwAwAGQAOAA0ADkAOQBjADkAZQBjADMAMAA2ADMAMQBkAGMAYwBj
ADEANgA1ADMAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgA2ADYA
MAAuADIAOAA5ADkANgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwAx
ADYAOQBmADQANgA1AGQAYwAwAGQAOAA0ADkAOQBjADkAZQBjADMAMAA2ADMAMQBkAGMAYwBjADEA
NgA1ADMALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEAOAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUA
bQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAA
AFMAVABfADEANgA5AGYANAA2ADUAZABjADAAZAA4ADQAOQA5AGMAOQBlAGMAMwAwADYAMwAxAGQA
YwBjAGMAMQA2ADUAMwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABT
AFQAXwAxADYAOQBmADQANgA1AGQAYwAwAGQAOAA0ADkAOQBjADkAZQBjADMAMAA2ADMAMQBkAGMA
YwBjADEANgA1ADMAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAu
ADYANgA2ADAALgAyADgAOQA5ADYAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADYANgA2ADAALgAyADgAOQA5ADYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAZD4AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Recurse Through Received Folders\Set File Key"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{65b57bdd-13dc-40e3-bea5-10919436bbae}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set File Key"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BCCC69F7-9246-4FF6-8C73-70803CE6E178}"
              SQLTask:SqlStatementSource="&#xA;SELECT agency_file_key &#xA;FROM (&#xA;SELECT &#xA;agency_file_key&#xA;, ROW_NUMBER() OVER(PARTITION BY file_hash ORDER BY agency_file_key) rnum &#xA;FROM [dbo].[agency_file] &#xA;WHERE file_hash = ? AND notification_sent_ind = 1&#xA;) A&#xA;WHERE rnum = 1"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="agency_file_key"
                SQLTask:DtsVariableName="User::file_key" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::file_hash"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Recurse Through Received Folders\Set File Status Accepted"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Description="Expression Task"
          DTS:DTSID="{171add9d-e386-4d34-ad99-3309c070123f}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set File Status Accepted"
          DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="@[User::file_status] = &quot;ACCEPTED&quot;" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Recurse Through Received Folders\Set File Status Rejected"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Description="Expression Task"
          DTS:Disabled="True"
          DTS:DTSID="{f53b6a0c-19f3-4dfd-a5ef-8a9e1e2c17cd}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set File Status Rejected"
          DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="@[User::file_status] = &quot;REJECTED&quot;" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Recurse Through Received Folders\Update File Record"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{b408704c-4899-4556-8108-3a90d74601ac}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update File Record"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BCCC69F7-9246-4FF6-8C73-70803CE6E178}"
              SQLTask:SqlStatementSource="UPDATE dbo.[agency_file] &#xA;SET notification_sent_ind = 0&#xA;WHERE agency_file_key = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::file_key"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Recurse Through Received Folders.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{CD1DE384-823F-4428-9274-7A664BD9BEA2}"
          DTS:From="Package\Recurse Through Received Folders\Set File Attributes"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Recurse Through Received Folders\Set Default File Format" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Recurse Through Received Folders.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{F4870E00-B3EA-4DED-86D1-E73B36D0E60D}"
          DTS:Expression="@[User::default_file_format_code]   !=&quot;DO NOT PROCESS&quot;"
          DTS:From="Package\Recurse Through Received Folders\Set Default File Format"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Recurse Through Received Folders\Insert File" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Recurse Through Received Folders.PrecedenceConstraints[Constraint 10]"
          DTS:CreationName=""
          DTS:DTSID="{DC0B18EB-A134-4215-A8F3-476AD3A8A5F7}"
          DTS:EvalOp="1"
          DTS:Expression="@[User::file_error_count] &gt; 0"
          DTS:From="Package\Recurse Through Received Folders\Confirm Target Branches Exist"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 10"
          DTS:To="Package\Recurse Through Received Folders\Move File To Rejected" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Recurse Through Received Folders.PrecedenceConstraints[Constraint 11]"
          DTS:CreationName=""
          DTS:DTSID="{565A6DA1-F17E-4663-AE6E-009A8D0A42C4}"
          DTS:From="Package\Recurse Through Received Folders\Set File Key"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 11"
          DTS:To="Package\Recurse Through Received Folders\Script Task" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Recurse Through Received Folders.PrecedenceConstraints[Constraint 12]"
          DTS:CreationName=""
          DTS:DTSID="{ebde9ce9-69ae-4be7-b70f-2a520cb8ad2c}"
          DTS:From="Package\Recurse Through Received Folders\Update File Record"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 12"
          DTS:To="Package\Recurse Through Received Folders\Email Notification" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Recurse Through Received Folders.PrecedenceConstraints[Constraint 13]"
          DTS:CreationName=""
          DTS:DTSID="{2E867EC2-FA19-4C74-9C0C-16C61B3B032A}"
          DTS:From="Package\Recurse Through Received Folders\Script Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 13"
          DTS:To="Package\Recurse Through Received Folders\Confirm Target Branches Exist" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Recurse Through Received Folders.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{4C14471D-4C28-4E7D-87E3-56674FCDB847}"
          DTS:From="Package\Recurse Through Received Folders\Insert File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Recurse Through Received Folders\Set File Key" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Recurse Through Received Folders.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{AB7F578F-5F83-47F4-BEE1-F714A4F3FC19}"
          DTS:From="Package\Recurse Through Received Folders\Set File Key"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Recurse Through Received Folders\Load File Row Data" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Recurse Through Received Folders.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{62D77782-1EEC-4EC5-89A1-C2AF8D570188}"
          DTS:From="Package\Recurse Through Received Folders\Load File Row Data"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Recurse Through Received Folders\Confirm Target Branches Exist" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Recurse Through Received Folders.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{FDBE4B70-8F9F-477B-A9CE-BE9E58736AD1}"
          DTS:EvalOp="1"
          DTS:Expression="@[User::file_error_count] == 0"
          DTS:From="Package\Recurse Through Received Folders\Confirm Target Branches Exist"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\Recurse Through Received Folders\Move File To Accepted" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Recurse Through Received Folders.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{8c220889-fa16-4696-90bd-23840798279d}"
          DTS:From="Package\Recurse Through Received Folders\Set File Status Rejected"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\Recurse Through Received Folders\Update File Record" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Recurse Through Received Folders.PrecedenceConstraints[Constraint 7]"
          DTS:CreationName=""
          DTS:DTSID="{6fc492e6-79cc-4394-9399-0d03cf76ed99}"
          DTS:From="Package\Recurse Through Received Folders\Move File To Accepted"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 7"
          DTS:To="Package\Recurse Through Received Folders\Set File Status Accepted" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Recurse Through Received Folders.PrecedenceConstraints[Constraint 8]"
          DTS:CreationName=""
          DTS:DTSID="{ee9e17ec-031b-4105-b756-b8c2421dd99a}"
          DTS:From="Package\Recurse Through Received Folders\Set File Status Accepted"
          DTS:ObjectName="Constraint 8"
          DTS:To="Package\Recurse Through Received Folders\Update File Record" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Recurse Through Received Folders.PrecedenceConstraints[Constraint 9]"
          DTS:CreationName=""
          DTS:DTSID="{404f7da1-77e1-4779-aae5-7b8078cb6e18}"
          DTS:From="Package\Recurse Through Received Folders\Move File To Rejected"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 9"
          DTS:To="Package\Recurse Through Received Folders\Set File Status Rejected" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{B5FC65DA-9217-439E-8518-A2838833762B}"
          DTS:ObjectName="{B5FC65DA-9217-439E-8518-A2838833762B}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::file_path" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SQL - Set Folder Path"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{dca4212d-7c39-419a-b5aa-d134d66c656a}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SQL - Set Folder Path"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{BCCC69F7-9246-4FF6-8C73-70803CE6E178}"
          SQLTask:SqlStmtSourceType="Variable"
          SQLTask:SqlStatementSource="User::FolderQuery"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="received_folder_path"
            SQLTask:DtsVariableName="User::received_root_folder" />
          <SQLTask:ResultBinding
            SQLTask:ResultName="accepted_folder_path"
            SQLTask:DtsVariableName="User::accepted_root_folder" />
          <SQLTask:ResultBinding
            SQLTask:ResultName="rejected_folder_path"
            SQLTask:DtsVariableName="User::rejected_root_folder" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{7E6AF717-B196-4C42-A30F-4BEBF5E43598}"
      DTS:From="Package\SQL - Set Folder Path"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Recurse Through Received Folders" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{B46E4254-84D8-4647-A452-2DD8DA865896}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{80B2F768-5750-462C-87E2-D505393CF4BB}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Log Process Batch Error"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DTSID="{9027b746-8cd6-46bd-b73c-8c68c242c205}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log Process Batch Error"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; Â© 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{F88B6351-8F55-462E-8386-5BDC26D924CE}"
              SQLTask:SqlStatementSource="EXEC cdm.batch_error_log &#xA;@batch_key = ?, &#xA;@error_scope = ?, &#xA;@error_number = ?, &#xA;@error_message = ?, &#xA;@error_type_cd = 'E'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::batch_key"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="0" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="0" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::ErrorCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="0" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="0" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Turn On Package Error Flag"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Disabled="True"
          DTS:DTSID="{3b56a78b-0536-43eb-b6c2-3c3ae7ee4c09}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Turn On Package Error Flag"
          DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2012; Â© 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="@[User::package_error_flag]=TRUE" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnError].PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{ff452a4b-9b12-452c-bdae-dcf83ce9cf44}"
          DTS:From="Package.EventHandlers[OnError]\Turn On Package Error Flag"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package.EventHandlers[OnError]\Log Process Batch Error" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnPostExecute]"
      DTS:CreationName="OnPostExecute"
      DTS:DTSID="{5F64C819-5CD6-4F7A-9328-B044B6D82336}"
      DTS:EventID="0"
      DTS:EventName="OnPostExecute"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{7C3235D4-3408-4E0B-B324-554FB1A55812}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\Assign Completed Indicator"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:DTSID="{213e0401-5d54-42cd-94ee-f23dc22c0046}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Assign Completed Indicator"
          DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2012; Â© 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="@[User::completed_ind] =  @[User::package_error_flag] ? 0 : 1" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\Conclude Process Batch"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DTSID="{344b1975-2055-4ee8-9505-7ef496712e1f}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Conclude Process Batch"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; Â© 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{F88B6351-8F55-462E-8386-5BDC26D924CE}"
              SQLTask:SqlStatementSource="EXEC cdm.batch_conclude&#xA;        @completed_ind = ?&#xA;      , @batch_key = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::completed_ind"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="0" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::batch_key"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="0" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\Entry Point"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Disabled="True"
          DTS:DTSID="{efa975d3-8eea-4bea-8259-ee3277788281}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Entry Point">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_e8c5ba5d3fa2491185477fa96103c72e"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp">
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[
                                    using System;
                                    using System.Data;
                                    using Microsoft.SqlServer.Dts.Runtime;
                                    using System.Windows.Forms;

                                    // if SSIS2012, use the following line:
                                    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]

                                    // if earlier version, use the next line instead of the above line:
                                    // [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
                                    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
                                    {
                                    enum ScriptResults
                                    {
                                    Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
                                    Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
                                    };

                                    public void Main()
                                    {
                                    Dts.TaskResult = (int)ScriptResults.Success;
                                    }
                                    }
                                ]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
    <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
        <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
        <xsd:element name="root" msdata:IsDataSet="true">
            <xsd:complexType>
                <xsd:choice maxOccurs="unbounded">
                    <xsd:element name="metadata">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" />
                            </xsd:sequence>
                            <xsd:attribute name="name" use="required" type="xsd:string" />
                            <xsd:attribute name="type" type="xsd:string" />
                            <xsd:attribute name="mimetype" type="xsd:string" />
                            <xsd:attribute ref="xml:space" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="assembly">
                        <xsd:complexType>
                            <xsd:attribute name="alias" type="xsd:string" />
                            <xsd:attribute name="name" type="xsd:string" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="data">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
                            <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
                            <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
                            <xsd:attribute ref="xml:space" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="resheader">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required" />
                        </xsd:complexType>
                    </xsd:element>
                </xsd:choice>
            </xsd:complexType>
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>2.0</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    </root>]]></ProjectItem>
              <ProjectItem
                Name="ST_e8c5ba5d3fa2491185477fa96103c72e.csproj"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <RootNamespace>ST_232fecafb70a4e8a904cc21f8870eed0.csproj</RootNamespace>
    <AssemblyName>ST_e8c5ba5d3fa2491185477fa96103c72e</AssemblyName>
    <ProjectGuid>{C792B577-3187-41B4-A778-35BF1292DEDE}</ProjectGuid>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <NoStandardLibraries>false</NoStandardLibraries>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <EmbedInteropTypes>True</EmbedInteropTypes>
      <HintPath>C:\Program Files (x86)\Microsoft SQL Server\130\SDK\Assemblies\Microsoft.SqlServer.DTSPipelineWrap.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.SQLServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=x86">
      <SpecificVersion>False</SpecificVersion>
      <EmbedInteropTypes>True</EmbedInteropTypes>
      <HintPath>C:\Program Files (x86)\Microsoft SQL Server\130\SDK\Assemblies\Microsoft.SQLServer.DTSRuntimeWrap.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files (x86)\Microsoft SQL Server\130\SDK\Assemblies\Microsoft.SQLServer.ManagedDTS.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System.dll" />
    <Reference Include="System.AddIn.dll" />
    <Reference Include="System.Data.dll" />
    <Reference Include="System.Windows.Forms.dll" />
    <Reference Include="System.Xml.dll" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Resources\" />
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[
                                    using System.Reflection;
                                    using System.Runtime.CompilerServices;

                                    //
                                    // General Information about an assembly is controlled through the following
                                    // set of attributes. Change these attribute values to modify the information
                                    // associated with an assembly.
                                    //
                                    [assembly: AssemblyTitle("ST_c41ad4bf47544c49ad46f4440163feae.csproj")]
                                    [assembly: AssemblyDescription("")]
                                    [assembly: AssemblyConfiguration("")]
                                    [assembly: AssemblyCompany("Varigence")]
                                    [assembly: AssemblyProduct("ST_c41ad4bf47544c49ad46f4440163feae.csproj")]
                                    [assembly: AssemblyCopyright("Copyright @ Varigence 2013")]
                                    [assembly: AssemblyTrademark("")]
                                    [assembly: AssemblyCulture("")]
                                    //
                                    // Version information for an assembly consists of the following four values:
                                    //
                                    //      Major Version
                                    //      Minor Version
                                    //      Build Number
                                    //      Revision
                                    //
                                    // You can specify all the values or you can default the Revision and Build Numbers
                                    // by using the '*' as shown below:

                                    [assembly: AssemblyVersion("1.0.*")]
                                ]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_e8c5ba5d3fa2491185477fa96103c72e</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_e8c5ba5d3fa2491185477fa96103c72e</msb:DisplayName>
		<msb:ProjectId>{26DE50F9-56C8-48B1-BC17-B2B97569FF01}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_e8c5ba5d3fa2491185477fa96103c72e.csproj"/>
		<msb:File Include="AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_232fecafb70a4e8a904cc21f8870eed0.csproj.Properties.Settings.get_Default():ST_232fecafb70a4e8a904cc21f8870eed0.csproj.Properties.Settings")]

namespace ST_232fecafb70a4e8a904cc21f8870eed0.csproj.Properties
{

    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="iso-8859-1"?>
<SettingsFile xmlns="http://schemas.microsoft.com/VisualStudio/2004/01/settings" CurrentProfile="(Default)"  >
    <Profiles>
        <Profile Name="(Default)" />
    </Profiles>
    <Settings /></SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_232fecafb70a4e8a904cc21f8870eed0.csproj.Properties.Resources.get_ResourceManager():System.Resources.ResourceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_232fecafb70a4e8a904cc21f8870eed0.csproj.Properties.Resources.get_Culture():System.Globalization.CultureInfo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_232fecafb70a4e8a904cc21f8870eed0.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo):Void")]

namespace ST_232fecafb70a4e8a904cc21f8870eed0.csproj.Properties {
    using System;


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_232fecafb70a4e8a904cc21f8870eed0.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }

    }
}]]></ProjectItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[Constraint_EXP - assign completed indicator_To_SQL - conclude process batch]"
          DTS:CreationName=""
          DTS:DTSID="{59aa2108-21c9-4911-9dd5-50a696db6a5e}"
          DTS:From="Package.EventHandlers[OnPostExecute]\Assign Completed Indicator"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint_EXP - assign completed indicator_To_SQL - conclude process batch"
          DTS:To="Package.EventHandlers[OnPostExecute]\Conclude Process Batch" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[Constraint_SCR - Branch Control Logic_To_EXP - assign completed indicator]"
          DTS:CreationName=""
          DTS:DTSID="{03f33345-d71c-4c53-ab9e-38faa805b089}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID] ==  @[System::PackageID]"
          DTS:From="Package.EventHandlers[OnPostExecute]\Entry Point"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint_SCR - Branch Control Logic_To_EXP - assign completed indicator"
          DTS:To="Package.EventHandlers[OnPostExecute]\Assign Completed Indicator"
          DTS:Value="2" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnPreExecute]"
      DTS:CreationName="OnPreExecute"
      DTS:DTSID="{BB333459-F9C4-487F-996C-A113288883C1}"
      DTS:EventID="1153914880"
      DTS:EventName="OnPreExecute"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{5F71A77C-0560-4F68-8672-EAE812DED8E0}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPreExecute]\Initiate Process Batch"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DTSID="{b3003ec2-5123-4988-ab20-08ad36064a11}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Initiate Process Batch"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; Â© 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{F88B6351-8F55-462E-8386-5BDC26D924CE}"
              SQLTask:SqlStatementSource="EXEC cdm.batch_initiate&#xA;@process_uid = ?, &#xA;@workflow_name = ?, &#xA;@workflow_guid = ?,&#xA;@workflow_version= ?"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="batch_key"
                SQLTask:DtsVariableName="User::batch_key" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::process_uid"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::package_version"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::PackageID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnWarning]"
      DTS:CreationName="OnWarning"
      DTS:DTSID="{93CB4B70-5B3C-40E8-86DB-8AD42C63B09C}"
      DTS:EventID="0"
      DTS:EventName="OnWarning"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{5069F237-ED30-4236-86E0-4D16927D069D}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnWarning]\SQL - log process batch warning"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DTSID="{4ea41bda-7564-400f-b393-e39af13f9c83}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL - log process batch warning"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{F88B6351-8F55-462E-8386-5BDC26D924CE}"
              SQLTask:SqlStatementSource="EXEC cdm.batch_error_log &#xA;@batch_key = ?, &#xA;@error_scope = ?, &#xA;@error_number = ?, &#xA;@error_message = ?, &#xA;@error_type_cd = 'E'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::batch_key"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="0" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="0" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::ErrorCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="0" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="0" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="198,42"
          Id="Package\Recurse Through Received Folders\Confirm Target Branches Exist"
          TopLeft="324.8,254.4" />
        <NodeLayout
          Size="161,42"
          Id="Package\Recurse Through Received Folders\Email Notification"
          TopLeft="333.5,657.8" />
        <NodeLayout
          Size="117,42"
          Id="Package\Recurse Through Received Folders\Insert File"
          TopLeft="587.2,75.2" />
        <NodeLayout
          Size="175,42"
          Id="Package\Recurse Through Received Folders\Load File Row Data"
          TopLeft="336.4,163" />
        <NodeLayout
          Size="168,42"
          Id="Package\Recurse Through Received Folders\Move File To Accepted"
          TopLeft="568,356.6" />
        <NodeLayout
          Size="166,42"
          Id="Package\Recurse Through Received Folders\Move File To Rejected"
          TopLeft="94.5000000000001,351.8" />
        <NodeLayout
          Size="134,42"
          Id="Package\Recurse Through Received Folders\Script Task"
          TopLeft="571,235" />
        <NodeLayout
          Size="192,42"
          Id="Package\Recurse Through Received Folders\Set Default File Format"
          TopLeft="330.2,77.2" />
        <NodeLayout
          Size="166,42"
          Id="Package\Recurse Through Received Folders\Set File Attributes"
          TopLeft="118,77" />
        <NodeLayout
          Size="138,42"
          Id="Package\Recurse Through Received Folders\Set File Key"
          TopLeft="574,166" />
        <NodeLayout
          Size="174,42"
          Id="Package\Recurse Through Received Folders\Set File Status Accepted"
          TopLeft="566.1,440.8" />
        <NodeLayout
          Size="190,42"
          Id="Package\Recurse Through Received Folders\Set File Status Rejected"
          TopLeft="92.0000000000001,438.3" />
        <NodeLayout
          Size="154,42"
          Id="Package\Recurse Through Received Folders\Update File Record"
          TopLeft="331.853174603175,560.188888888889" />
        <EdgeLayout
          Id="Package\Recurse Through Received Folders.PrecedenceConstraints[Constraint]"
          TopLeft="284,98.1">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="46.2,0"
              Start="0,0"
              End="38.7,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="38.7,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Recurse Through Received Folders.PrecedenceConstraints[Constraint 1]"
          TopLeft="522.2,97.2">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="65,0"
              Start="0,0"
              End="57.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="57.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Recurse Through Received Folders.PrecedenceConstraints[Constraint 10]"
          TopLeft="392,296">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-214.3,55.8"
              Start="0,0"
              End="-214.3,48.3">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5889156626506" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.5889156626506"
                    Point2="0,22.5889156626506"
                    Point3="-4,22.5889156626506" />
                  <mssgle:LineSegment
                    End="-210.3,22.5889156626506" />
                  <mssgle:CubicBezierSegment
                    Point1="-210.3,22.5889156626506"
                    Point2="-214.3,22.5889156626506"
                    Point3="-214.3,26.5889156626506" />
                  <mssgle:LineSegment
                    End="-214.3,48.3" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-115.15,27.5889156626506,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Recurse Through Received Folders.PrecedenceConstraints[Constraint 11]"
          TopLeft="640.5,208">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27"
              Start="0,0"
              End="0,19.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Recurse Through Received Folders.PrecedenceConstraints[Constraint 12]"
          TopLeft="411.476587301588,601.788888888889">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56.0111111111109"
              Start="0,0"
              End="0,48.5111111111109">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.5111111111109" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Recurse Through Received Folders.PrecedenceConstraints[Constraint 13]"
          TopLeft="571,256">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-48.2,19.4"
              Start="0,0"
              End="-40.7,19.4">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-20.1,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-20.1,0"
                    Point2="-24.1,0"
                    Point3="-24.1,4" />
                  <mssgle:LineSegment
                    End="-24.1,15.4" />
                  <mssgle:CubicBezierSegment
                    Point1="-24.1,15.4"
                    Point2="-24.1,19.4"
                    Point3="-28.1,19.4" />
                  <mssgle:LineSegment
                    End="-40.7,19.4" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Recurse Through Received Folders.PrecedenceConstraints[Constraint 2]"
          TopLeft="644.35,117.2">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48.8"
              Start="0,0"
              End="0,41.3">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.3" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Recurse Through Received Folders.PrecedenceConstraints[Constraint 3]"
          TopLeft="574,185.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-62.6,0"
              Start="0,0"
              End="-55.1,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-55.1,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Recurse Through Received Folders.PrecedenceConstraints[Constraint 4]"
          TopLeft="423.85,205">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49.4"
              Start="0,0"
              End="0,41.9">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.9" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Recurse Through Received Folders.PrecedenceConstraints[Constraint 5]"
          TopLeft="455.2,296">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="196.8,60.6"
              Start="0,0"
              End="196.8,53.1">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5320481927711" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.5320481927711"
                    Point2="0,24.5320481927711"
                    Point3="4,24.5320481927711" />
                  <mssgle:LineSegment
                    End="192.8,24.5320481927711" />
                  <mssgle:CubicBezierSegment
                    Point1="192.8,24.5320481927711"
                    Point2="196.8,24.5320481927711"
                    Point3="196.8,28.5320481927711" />
                  <mssgle:LineSegment
                    End="196.8,53.1" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="90.4,29.5320481927711,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Recurse Through Received Folders.PrecedenceConstraints[Constraint 6]"
          TopLeft="187.2,479.9">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="197.453174603175,80.288888888889"
              Start="0,0"
              End="197.453174603175,72.788888888889">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.679247863248" />
                  <mssgle:CubicBezierSegment
                    Point1="0,43.679247863248"
                    Point2="0,47.679247863248"
                    Point3="4,47.679247863248" />
                  <mssgle:LineSegment
                    End="193.453174603175,47.679247863248" />
                  <mssgle:CubicBezierSegment
                    Point1="193.453174603175,47.679247863248"
                    Point2="197.453174603175,47.679247863248"
                    Point3="197.453174603175,51.679247863248" />
                  <mssgle:LineSegment
                    End="197.453174603175,72.788888888889" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Recurse Through Received Folders.PrecedenceConstraints[Constraint 7]"
          TopLeft="652.65,398.2">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42.6"
              Start="0,0"
              End="0,35.1">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.1" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Recurse Through Received Folders.PrecedenceConstraints[Constraint 8]"
          TopLeft="653.3,482.4">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-219.846825396825,77.788888888889"
              Start="0,0"
              End="-219.846825396825,70.288888888889">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.1946324786326" />
                  <mssgle:CubicBezierSegment
                    Point1="0,42.1946324786326"
                    Point2="0,46.1946324786326"
                    Point3="-4,46.1946324786326" />
                  <mssgle:LineSegment
                    End="-215.846825396825,46.1946324786326" />
                  <mssgle:CubicBezierSegment
                    Point1="-215.846825396825,46.1946324786326"
                    Point2="-219.846825396825,46.1946324786326"
                    Point3="-219.846825396825,50.1946324786326" />
                  <mssgle:LineSegment
                    End="-219.846825396825,70.288888888889" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Recurse Through Received Folders.PrecedenceConstraints[Constraint 9]"
          TopLeft="177.7,393.4">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="9.5,44.9"
              Start="0,0"
              End="9.5,37.4">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.45" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.45"
                    Point2="0,22.45"
                    Point3="4,22.45" />
                  <mssgle:LineSegment
                    End="5.5,22.45" />
                  <mssgle:CubicBezierSegment
                    Point1="5.5,22.45"
                    Point2="9.5,22.45"
                    Point3="9.5,26.45" />
                  <mssgle:LineSegment
                    End="9.5,37.4" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="882,819"
          Size="882,862"
          Id="Package\Recurse Through Received Folders"
          TopLeft="148,220.4" />
        <NodeLayout
          Size="165,42"
          Id="Package\SQL - Set Folder Path"
          TopLeft="508,97.6" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="589.75,139.6">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,80.8"
              Start="0,0"
              End="0,73.3">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,73.3" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnError]\Log Process Batch Error"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnError]\Turn On Package Error Flag"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package.EventHandlers[OnError].PrecedenceConstraints[Constraint]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\Assign Completed Indicator"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\Conclude Process Batch"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\Entry Point"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[Constraint_EXP - assign completed indicator_To_SQL - conclude process batch]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[Constraint_SCR - Branch Control Logic_To_EXP - assign completed indicator]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnPreExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPreExecute]\Initiate Process Batch"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnWarning]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnWarning]\SQL - log process batch warning"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>